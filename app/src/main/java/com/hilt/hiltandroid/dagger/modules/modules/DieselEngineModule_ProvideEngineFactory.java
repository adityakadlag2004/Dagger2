// Generated by Dagger (https://dagger.dev).
package com.hilt.hiltandroid.dagger.modules.modules;

import com.hilt.hiltandroid.dagger.modules.engine.DieselEngine;
import com.hilt.hiltandroid.dagger.modules.engine.Engine;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DieselEngineModule_ProvideEngineFactory implements Factory<Engine> {
  private final DieselEngineModule module;

  private final Provider<DieselEngine> dieselEngineProvider;

  public DieselEngineModule_ProvideEngineFactory(DieselEngineModule module,
      Provider<DieselEngine> dieselEngineProvider) {
    this.module = module;
    this.dieselEngineProvider = dieselEngineProvider;
  }

  @Override
  public Engine get() {
    return provideEngine(module, dieselEngineProvider.get());
  }

  public static DieselEngineModule_ProvideEngineFactory create(DieselEngineModule module,
      Provider<DieselEngine> dieselEngineProvider) {
    return new DieselEngineModule_ProvideEngineFactory(module, dieselEngineProvider);
  }

  public static Engine provideEngine(DieselEngineModule instance, DieselEngine dieselEngine) {
    return Preconditions.checkNotNull(instance.provideEngine(dieselEngine), "Cannot return null from a non-@Nullable @Provides method");
  }
}
