// Generated by Dagger (https://dagger.dev).
package com.hilt.hiltandroid.dagger.modules.car;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Wheels_Factory implements Factory<Wheels> {
  private final Provider<Rims> rimsProvider;

  private final Provider<Tyres> tyresProvider;

  public Wheels_Factory(Provider<Rims> rimsProvider, Provider<Tyres> tyresProvider) {
    this.rimsProvider = rimsProvider;
    this.tyresProvider = tyresProvider;
  }

  @Override
  public Wheels get() {
    return newInstance(rimsProvider.get(), tyresProvider.get());
  }

  public static Wheels_Factory create(Provider<Rims> rimsProvider, Provider<Tyres> tyresProvider) {
    return new Wheels_Factory(rimsProvider, tyresProvider);
  }

  public static Wheels newInstance(Rims rims, Tyres tyres) {
    return new Wheels(rims, tyres);
  }
}
