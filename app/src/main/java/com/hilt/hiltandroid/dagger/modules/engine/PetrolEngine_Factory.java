// Generated by Dagger (https://dagger.dev).
package com.hilt.hiltandroid.dagger.modules.engine;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PetrolEngine_Factory implements Factory<PetrolEngine> {
  private final Provider<Integer> horsePowerProvider;

  private final Provider<Integer> capacityProvider;

  public PetrolEngine_Factory(Provider<Integer> horsePowerProvider,
      Provider<Integer> capacityProvider) {
    this.horsePowerProvider = horsePowerProvider;
    this.capacityProvider = capacityProvider;
  }

  @Override
  public PetrolEngine get() {
    return newInstance(horsePowerProvider.get(), capacityProvider.get());
  }

  public static PetrolEngine_Factory create(Provider<Integer> horsePowerProvider,
      Provider<Integer> capacityProvider) {
    return new PetrolEngine_Factory(horsePowerProvider, capacityProvider);
  }

  public static PetrolEngine newInstance(int horsePower, int capacity) {
    return new PetrolEngine(horsePower, capacity);
  }
}
